syntax = "v1"

info (
	title: // TODO: add title
	desc: // TODO: add description
	author: "anjo"
	email: "1055275260@qq.com"
)

type AppealRequest {
	StudentID uint64 `json:"student_id,omitempty" form:"student_id"`

	ContactPhone string `json:"contact_phone,omitempty" form:"contact_phone"`

	EmergencyName  string `json:"emergency_name,omitempty" form:"emergency_name"`
	EmergencyPhone string `json:"emergency_phone,omitempty" form:"emergency_phone"`

	CounsellorName string `json:"counsellor_name,omitempty" form:"counsellor_name"`
	CounsellorID   uint64 `json:"counsellor_id,omitempty" form:"counsellor_id"`

	//申诉-请假理由
	LeaveReason string `json:"reason" form:"reason"`
	//申诉-请假课程
	CourseName string `json:"course_name" form:"course_name"`
	CourseID   uint64 `json:"course_id" form:"course_id"`
	//课时起止
	LeaveCourseFrom int `json:"lea_from" form:"lea_from"`
	LeaveCourseTo   int `json:"lea_to" form:"lea_to"`
	//申诉表-请假条区分
	TagAs uint `json:"tag" form:"tag"` //默认为请假条
}

type AppealListRequest {
	StudentID uint64 `json:"student_id" form:"student_id"`
}
type ListReply {
	Status  uint32      `json:"status"`
	Message string      `json:"msg"`
	Data    interface{} `json:"data"`
	Total   uint32      `json:"total"`
	Error   string      `json:"error"`
}
type AppealResponse {
	Status  uint32 `json:"status"`
	Message string `json:"msg"`
	Error   string `json:"error"`
}

service appeal-api {
	@handler StudentAskforLeave // TODO: set handler name and delete this comment
	post /appealLeave(AppealRequest) returns(AppealResponse)
	
	@handler GetAppealListBySid // TODO: set handler name and delete this comment
	get /appealLeave(AppealListRequest) returns(ListReply)
}