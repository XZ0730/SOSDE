// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.5
// source: appealService.proto

package appeal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppealRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentID       string `protobuf:"bytes,1,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
	ContactPhone    string `protobuf:"bytes,2,opt,name=ContactPhone,proto3" json:"ContactPhone,omitempty"`
	EmergencyName   string `protobuf:"bytes,3,opt,name=EmergencyName,proto3" json:"EmergencyName,omitempty"`
	EmergencyPhone  string `protobuf:"bytes,4,opt,name=EmergencyPhone,proto3" json:"EmergencyPhone,omitempty"`
	CounsellorName  string `protobuf:"bytes,5,opt,name=CounsellorName,proto3" json:"CounsellorName,omitempty"`
	CounsellorID    string `protobuf:"bytes,6,opt,name=CounsellorID,proto3" json:"CounsellorID,omitempty"`
	LeaveReason     string `protobuf:"bytes,7,opt,name=LeaveReason,proto3" json:"LeaveReason,omitempty"`
	CourseName      string `protobuf:"bytes,8,opt,name=CourseName,proto3" json:"CourseName,omitempty"`
	CourseID        string `protobuf:"bytes,9,opt,name=CourseID,proto3" json:"CourseID,omitempty"`
	LeaveCourseFrom uint32 `protobuf:"varint,10,opt,name=LeaveCourseFrom,proto3" json:"LeaveCourseFrom,omitempty"`
	LeaveCourseTo   uint32 `protobuf:"varint,11,opt,name=LeaveCourseTo,proto3" json:"LeaveCourseTo,omitempty"`
	TagAs           uint32 `protobuf:"varint,12,opt,name=TagAs,proto3" json:"TagAs,omitempty"`
	University      string `protobuf:"bytes,13,opt,name=University,proto3" json:"University,omitempty"`
}

func (x *AppealRequest) Reset() {
	*x = AppealRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealRequest) ProtoMessage() {}

func (x *AppealRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealRequest.ProtoReflect.Descriptor instead.
func (*AppealRequest) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{0}
}

func (x *AppealRequest) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

func (x *AppealRequest) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *AppealRequest) GetEmergencyName() string {
	if x != nil {
		return x.EmergencyName
	}
	return ""
}

func (x *AppealRequest) GetEmergencyPhone() string {
	if x != nil {
		return x.EmergencyPhone
	}
	return ""
}

func (x *AppealRequest) GetCounsellorName() string {
	if x != nil {
		return x.CounsellorName
	}
	return ""
}

func (x *AppealRequest) GetCounsellorID() string {
	if x != nil {
		return x.CounsellorID
	}
	return ""
}

func (x *AppealRequest) GetLeaveReason() string {
	if x != nil {
		return x.LeaveReason
	}
	return ""
}

func (x *AppealRequest) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *AppealRequest) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *AppealRequest) GetLeaveCourseFrom() uint32 {
	if x != nil {
		return x.LeaveCourseFrom
	}
	return 0
}

func (x *AppealRequest) GetLeaveCourseTo() uint32 {
	if x != nil {
		return x.LeaveCourseTo
	}
	return 0
}

func (x *AppealRequest) GetTagAs() uint32 {
	if x != nil {
		return x.TagAs
	}
	return 0
}

func (x *AppealRequest) GetUniversity() string {
	if x != nil {
		return x.University
	}
	return ""
}

type AppealModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentID       string `protobuf:"bytes,1,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
	ContactPhone    string `protobuf:"bytes,2,opt,name=ContactPhone,proto3" json:"ContactPhone,omitempty"`
	EmergencyName   string `protobuf:"bytes,3,opt,name=EmergencyName,proto3" json:"EmergencyName,omitempty"`
	EmergencyPhone  string `protobuf:"bytes,4,opt,name=EmergencyPhone,proto3" json:"EmergencyPhone,omitempty"`
	CounsellorName  string `protobuf:"bytes,5,opt,name=CounsellorName,proto3" json:"CounsellorName,omitempty"`
	CounsellorID    string `protobuf:"bytes,6,opt,name=CounsellorID,proto3" json:"CounsellorID,omitempty"`
	LeaveReason     string `protobuf:"bytes,7,opt,name=LeaveReason,proto3" json:"LeaveReason,omitempty"`
	CourseName      string `protobuf:"bytes,8,opt,name=CourseName,proto3" json:"CourseName,omitempty"`
	CourseID        string `protobuf:"bytes,9,opt,name=CourseID,proto3" json:"CourseID,omitempty"`
	LeaveCourseFrom int32  `protobuf:"varint,10,opt,name=LeaveCourseFrom,proto3" json:"LeaveCourseFrom,omitempty"`
	LeaveCourseTo   int32  `protobuf:"varint,11,opt,name=LeaveCourseTo,proto3" json:"LeaveCourseTo,omitempty"`
	TagAs           uint32 `protobuf:"varint,12,opt,name=TagAs,proto3" json:"TagAs,omitempty"`
	IsAudit         uint32 `protobuf:"varint,13,opt,name=IsAudit,proto3" json:"IsAudit,omitempty"`
}

func (x *AppealModel) Reset() {
	*x = AppealModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealModel) ProtoMessage() {}

func (x *AppealModel) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealModel.ProtoReflect.Descriptor instead.
func (*AppealModel) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{1}
}

func (x *AppealModel) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

func (x *AppealModel) GetContactPhone() string {
	if x != nil {
		return x.ContactPhone
	}
	return ""
}

func (x *AppealModel) GetEmergencyName() string {
	if x != nil {
		return x.EmergencyName
	}
	return ""
}

func (x *AppealModel) GetEmergencyPhone() string {
	if x != nil {
		return x.EmergencyPhone
	}
	return ""
}

func (x *AppealModel) GetCounsellorName() string {
	if x != nil {
		return x.CounsellorName
	}
	return ""
}

func (x *AppealModel) GetCounsellorID() string {
	if x != nil {
		return x.CounsellorID
	}
	return ""
}

func (x *AppealModel) GetLeaveReason() string {
	if x != nil {
		return x.LeaveReason
	}
	return ""
}

func (x *AppealModel) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *AppealModel) GetCourseID() string {
	if x != nil {
		return x.CourseID
	}
	return ""
}

func (x *AppealModel) GetLeaveCourseFrom() int32 {
	if x != nil {
		return x.LeaveCourseFrom
	}
	return 0
}

func (x *AppealModel) GetLeaveCourseTo() int32 {
	if x != nil {
		return x.LeaveCourseTo
	}
	return 0
}

func (x *AppealModel) GetTagAs() uint32 {
	if x != nil {
		return x.TagAs
	}
	return 0
}

func (x *AppealModel) GetIsAudit() uint32 {
	if x != nil {
		return x.IsAudit
	}
	return 0
}

type AppealListRequset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StudentID string `protobuf:"bytes,1,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
}

func (x *AppealListRequset) Reset() {
	*x = AppealListRequset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealListRequset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealListRequset) ProtoMessage() {}

func (x *AppealListRequset) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealListRequset.ProtoReflect.Descriptor instead.
func (*AppealListRequset) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{2}
}

func (x *AppealListRequset) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

type AppealListReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     uint32         `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message    string         `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	AppealList []*AppealModel `protobuf:"bytes,3,rep,name=AppealList,proto3" json:"AppealList,omitempty"`
	Total      uint32         `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Error      string         `protobuf:"bytes,5,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *AppealListReply) Reset() {
	*x = AppealListReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealListReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealListReply) ProtoMessage() {}

func (x *AppealListReply) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealListReply.ProtoReflect.Descriptor instead.
func (*AppealListReply) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{3}
}

func (x *AppealListReply) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AppealListReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppealListReply) GetAppealList() []*AppealModel {
	if x != nil {
		return x.AppealList
	}
	return nil
}

func (x *AppealListReply) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AppealListReply) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type AppealResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  uint32 `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	Error   string `protobuf:"bytes,3,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *AppealResponse) Reset() {
	*x = AppealResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppealResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppealResponse) ProtoMessage() {}

func (x *AppealResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppealResponse.ProtoReflect.Descriptor instead.
func (*AppealResponse) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{4}
}

func (x *AppealResponse) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AppealResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AppealResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ComplainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupervisorID   string `protobuf:"bytes,1,opt,name=SupervisorID,proto3" json:"SupervisorID,omitempty"`
	SupervisorName string `protobuf:"bytes,2,opt,name=SupervisorName,proto3" json:"SupervisorName,omitempty"`
	SchoolName     string `protobuf:"bytes,3,opt,name=SchoolName,proto3" json:"SchoolName,omitempty"`
	Reason         string `protobuf:"bytes,4,opt,name=Reason,proto3" json:"Reason,omitempty"`
	CounsellorName string `protobuf:"bytes,5,opt,name=CounsellorName,proto3" json:"CounsellorName,omitempty"`
	CounsellorID   string `protobuf:"bytes,6,opt,name=CounsellorID,proto3" json:"CounsellorID,omitempty"`
	StudentID      string `protobuf:"bytes,7,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
}

func (x *ComplainRequest) Reset() {
	*x = ComplainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainRequest) ProtoMessage() {}

func (x *ComplainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainRequest.ProtoReflect.Descriptor instead.
func (*ComplainRequest) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{5}
}

func (x *ComplainRequest) GetSupervisorID() string {
	if x != nil {
		return x.SupervisorID
	}
	return ""
}

func (x *ComplainRequest) GetSupervisorName() string {
	if x != nil {
		return x.SupervisorName
	}
	return ""
}

func (x *ComplainRequest) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *ComplainRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ComplainRequest) GetCounsellorName() string {
	if x != nil {
		return x.CounsellorName
	}
	return ""
}

func (x *ComplainRequest) GetCounsellorID() string {
	if x != nil {
		return x.CounsellorID
	}
	return ""
}

func (x *ComplainRequest) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

type ComplainModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	SupervisorID       string `protobuf:"bytes,2,opt,name=SupervisorID,proto3" json:"SupervisorID,omitempty"`
	SupervisorName     string `protobuf:"bytes,3,opt,name=SupervisorName,proto3" json:"SupervisorName,omitempty"`
	Supervisor_Major   string `protobuf:"bytes,4,opt,name=Supervisor_Major,json=SupervisorMajor,proto3" json:"Supervisor_Major,omitempty"`
	Supervisor_College string `protobuf:"bytes,5,opt,name=Supervisor_College,json=SupervisorCollege,proto3" json:"Supervisor_College,omitempty"`
	SchoolName         string `protobuf:"bytes,6,opt,name=SchoolName,proto3" json:"SchoolName,omitempty"`
	Reason             string `protobuf:"bytes,7,opt,name=Reason,proto3" json:"Reason,omitempty"`
	StudentID          string `protobuf:"bytes,8,opt,name=StudentID,proto3" json:"StudentID,omitempty"`
	StudentName        string `protobuf:"bytes,9,opt,name=StudentName,proto3" json:"StudentName,omitempty"`
	Student_Major      string `protobuf:"bytes,10,opt,name=Student_Major,json=StudentMajor,proto3" json:"Student_Major,omitempty"`
	College            string `protobuf:"bytes,11,opt,name=College,proto3" json:"College,omitempty"`
}

func (x *ComplainModel) Reset() {
	*x = ComplainModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainModel) ProtoMessage() {}

func (x *ComplainModel) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainModel.ProtoReflect.Descriptor instead.
func (*ComplainModel) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{6}
}

func (x *ComplainModel) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *ComplainModel) GetSupervisorID() string {
	if x != nil {
		return x.SupervisorID
	}
	return ""
}

func (x *ComplainModel) GetSupervisorName() string {
	if x != nil {
		return x.SupervisorName
	}
	return ""
}

func (x *ComplainModel) GetSupervisor_Major() string {
	if x != nil {
		return x.Supervisor_Major
	}
	return ""
}

func (x *ComplainModel) GetSupervisor_College() string {
	if x != nil {
		return x.Supervisor_College
	}
	return ""
}

func (x *ComplainModel) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *ComplainModel) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ComplainModel) GetStudentID() string {
	if x != nil {
		return x.StudentID
	}
	return ""
}

func (x *ComplainModel) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *ComplainModel) GetStudent_Major() string {
	if x != nil {
		return x.Student_Major
	}
	return ""
}

func (x *ComplainModel) GetCollege() string {
	if x != nil {
		return x.College
	}
	return ""
}

type ComplainResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       uint32           `protobuf:"varint,1,opt,name=Status,proto3" json:"Status,omitempty"`
	Message      string           `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	ComplainList []*ComplainModel `protobuf:"bytes,3,rep,name=ComplainList,proto3" json:"ComplainList,omitempty"`
	Total        uint32           `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Error        string           `protobuf:"bytes,5,opt,name=Error,proto3" json:"Error,omitempty"`
}

func (x *ComplainResponse) Reset() {
	*x = ComplainResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainResponse) ProtoMessage() {}

func (x *ComplainResponse) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainResponse.ProtoReflect.Descriptor instead.
func (*ComplainResponse) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{7}
}

func (x *ComplainResponse) GetStatus() uint32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *ComplainResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ComplainResponse) GetComplainList() []*ComplainModel {
	if x != nil {
		return x.ComplainList
	}
	return nil
}

func (x *ComplainResponse) GetTotal() uint32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ComplainResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type ComplainGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConsellorID    string `protobuf:"bytes,1,opt,name=ConsellorID,proto3" json:"ConsellorID,omitempty"`
	College        string `protobuf:"bytes,2,opt,name=College,proto3" json:"College,omitempty"`
	Major          string `protobuf:"bytes,3,opt,name=Major,proto3" json:"Major,omitempty"`
	StudentName    string `protobuf:"bytes,4,opt,name=StudentName,proto3" json:"StudentName,omitempty"`
	SupervisorName string `protobuf:"bytes,5,opt,name=SupervisorName,proto3" json:"SupervisorName,omitempty"`
	SupervisorId   string `protobuf:"bytes,6,opt,name=SupervisorId,proto3" json:"SupervisorId,omitempty"`
}

func (x *ComplainGetRequest) Reset() {
	*x = ComplainGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainGetRequest) ProtoMessage() {}

func (x *ComplainGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainGetRequest.ProtoReflect.Descriptor instead.
func (*ComplainGetRequest) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{8}
}

func (x *ComplainGetRequest) GetConsellorID() string {
	if x != nil {
		return x.ConsellorID
	}
	return ""
}

func (x *ComplainGetRequest) GetCollege() string {
	if x != nil {
		return x.College
	}
	return ""
}

func (x *ComplainGetRequest) GetMajor() string {
	if x != nil {
		return x.Major
	}
	return ""
}

func (x *ComplainGetRequest) GetStudentName() string {
	if x != nil {
		return x.StudentName
	}
	return ""
}

func (x *ComplainGetRequest) GetSupervisorName() string {
	if x != nil {
		return x.SupervisorName
	}
	return ""
}

func (x *ComplainGetRequest) GetSupervisorId() string {
	if x != nil {
		return x.SupervisorId
	}
	return ""
}

type ComplainPassRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid          uint64 `protobuf:"varint,1,opt,name=Cid,proto3" json:"Cid,omitempty"`
	ConsellorID  string `protobuf:"bytes,2,opt,name=ConsellorID,proto3" json:"ConsellorID,omitempty"`
	SupervisorID string `protobuf:"bytes,3,opt,name=SupervisorID,proto3" json:"SupervisorID,omitempty"`
	SchoolName   string `protobuf:"bytes,4,opt,name=SchoolName,proto3" json:"SchoolName,omitempty"`
	Pass         bool   `protobuf:"varint,5,opt,name=Pass,proto3" json:"Pass,omitempty"` //pass由query传入
}

func (x *ComplainPassRequest) Reset() {
	*x = ComplainPassRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_appealService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComplainPassRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComplainPassRequest) ProtoMessage() {}

func (x *ComplainPassRequest) ProtoReflect() protoreflect.Message {
	mi := &file_appealService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComplainPassRequest.ProtoReflect.Descriptor instead.
func (*ComplainPassRequest) Descriptor() ([]byte, []int) {
	return file_appealService_proto_rawDescGZIP(), []int{9}
}

func (x *ComplainPassRequest) GetCid() uint64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *ComplainPassRequest) GetConsellorID() string {
	if x != nil {
		return x.ConsellorID
	}
	return ""
}

func (x *ComplainPassRequest) GetSupervisorID() string {
	if x != nil {
		return x.SupervisorID
	}
	return ""
}

func (x *ComplainPassRequest) GetSchoolName() string {
	if x != nil {
		return x.SchoolName
	}
	return ""
}

func (x *ComplainPassRequest) GetPass() bool {
	if x != nil {
		return x.Pass
	}
	return false
}

var File_appealService_proto protoreflect.FileDescriptor

var file_appealService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x22, 0xcf, 0x03,
	0x0a, 0x0d, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c,
	0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x73,
	0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x54, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x61, 0x67,
	0x41, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x61, 0x67, 0x41, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x55, 0x6e, 0x69, 0x76, 0x65, 0x72, 0x73, 0x69, 0x74, 0x79, 0x22,
	0xc7, 0x03, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x0d, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65,
	0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x45, 0x6d, 0x65, 0x72, 0x67,
	0x65, 0x6e, 0x63, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x45, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x6e, 0x63, 0x79, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c,
	0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x73,
	0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43,
	0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x4c,
	0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x28, 0x0a, 0x0f, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0f, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x46,
	0x72, 0x6f, 0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x54, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x61, 0x67,
	0x41, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x54, 0x61, 0x67, 0x41, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x49, 0x73, 0x41, 0x75, 0x64, 0x69, 0x74, 0x22, 0x31, 0x0a, 0x11, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x73, 0x65, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22, 0xa4, 0x01, 0x0a,
	0x0f, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0a, 0x41, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x58, 0x0a, 0x0e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xff, 0x01,
	0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c,
	0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x43,
	0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x6f, 0x75, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49,
	0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x22,
	0xfc, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x4d, 0x61, 0x6a, 0x6f,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69,
	0x73, 0x6f, 0x72, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x5f, 0x4d, 0x61, 0x6a, 0x6f, 0x72,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x6a, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x22, 0xab,
	0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70,
	0x70, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x0c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xd4, 0x01, 0x0a,
	0x12, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6c,
	0x6c, 0x6f, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x74, 0x75, 0x64,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x50, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x43,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x43, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6c, 0x6c, 0x6f, 0x72, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x50, 0x61, 0x73, 0x73, 0x32, 0xf8, 0x02, 0x0a, 0x06, 0x41, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x12, 0x43, 0x0a, 0x12, 0x53, 0x74, 0x75, 0x64, 0x65, 0x6e, 0x74, 0x41, 0x73, 0x6b,
	0x66, 0x6f, 0x72, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61,
	0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x70,
	0x70, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x53, 0x69, 0x64, 0x12, 0x19, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x73, 0x65, 0x74, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61,
	0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x49, 0x0a, 0x14, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x61, 0x70, 0x70, 0x65,
	0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x61, 0x69, 0x6e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x12, 0x50, 0x61, 0x73, 0x73, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x50,
	0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x70,
	0x65, 0x61, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x61, 0x70, 0x70, 0x65, 0x61, 0x6c, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_appealService_proto_rawDescOnce sync.Once
	file_appealService_proto_rawDescData = file_appealService_proto_rawDesc
)

func file_appealService_proto_rawDescGZIP() []byte {
	file_appealService_proto_rawDescOnce.Do(func() {
		file_appealService_proto_rawDescData = protoimpl.X.CompressGZIP(file_appealService_proto_rawDescData)
	})
	return file_appealService_proto_rawDescData
}

var file_appealService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_appealService_proto_goTypes = []interface{}{
	(*AppealRequest)(nil),       // 0: appeal.AppealRequest
	(*AppealModel)(nil),         // 1: appeal.AppealModel
	(*AppealListRequset)(nil),   // 2: appeal.AppealListRequset
	(*AppealListReply)(nil),     // 3: appeal.AppealListReply
	(*AppealResponse)(nil),      // 4: appeal.AppealResponse
	(*ComplainRequest)(nil),     // 5: appeal.ComplainRequest
	(*ComplainModel)(nil),       // 6: appeal.ComplainModel
	(*ComplainResponse)(nil),    // 7: appeal.ComplainResponse
	(*ComplainGetRequest)(nil),  // 8: appeal.ComplainGetRequest
	(*ComplainPassRequest)(nil), // 9: appeal.ComplainPassRequest
}
var file_appealService_proto_depIdxs = []int32{
	1, // 0: appeal.AppealListReply.AppealList:type_name -> appeal.AppealModel
	6, // 1: appeal.ComplainResponse.ComplainList:type_name -> appeal.ComplainModel
	0, // 2: appeal.Appeal.StudentAskforLeave:input_type -> appeal.AppealRequest
	2, // 3: appeal.Appeal.GetAppealListBySid:input_type -> appeal.AppealListRequset
	5, // 4: appeal.Appeal.ComplainToSupervisor:input_type -> appeal.ComplainRequest
	8, // 5: appeal.Appeal.GetComplainTables:input_type -> appeal.ComplainGetRequest
	9, // 6: appeal.Appeal.PassComplainTables:input_type -> appeal.ComplainPassRequest
	4, // 7: appeal.Appeal.StudentAskforLeave:output_type -> appeal.AppealResponse
	3, // 8: appeal.Appeal.GetAppealListBySid:output_type -> appeal.AppealListReply
	7, // 9: appeal.Appeal.ComplainToSupervisor:output_type -> appeal.ComplainResponse
	7, // 10: appeal.Appeal.GetComplainTables:output_type -> appeal.ComplainResponse
	4, // 11: appeal.Appeal.PassComplainTables:output_type -> appeal.AppealResponse
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_appealService_proto_init() }
func file_appealService_proto_init() {
	if File_appealService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_appealService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealListRequset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealListReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppealResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplainModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplainResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplainGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_appealService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComplainPassRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_appealService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_appealService_proto_goTypes,
		DependencyIndexes: file_appealService_proto_depIdxs,
		MessageInfos:      file_appealService_proto_msgTypes,
	}.Build()
	File_appealService_proto = out.File
	file_appealService_proto_rawDesc = nil
	file_appealService_proto_goTypes = nil
	file_appealService_proto_depIdxs = nil
}
