// Code generated by goctl. DO NOT EDIT.
// Source: appealService.proto

package server

import (
	"context"

	"appeal/appeal"
	"appeal/internal/logic"
	"appeal/internal/svc"
)

type AppealServer struct {
	svcCtx *svc.ServiceContext
	appeal.UnimplementedAppealServer
}

func NewAppealServer(svcCtx *svc.ServiceContext) *AppealServer {
	return &AppealServer{
		svcCtx: svcCtx,
	}
}

func (s *AppealServer) StudentAskforLeave(ctx context.Context, in *appeal.AppealRequest) (*appeal.AppealResponse, error) {
	l := logic.NewStudentAskforLeaveLogic(ctx, s.svcCtx)
	return l.StudentAskforLeave(in)
}

func (s *AppealServer) GetAppealListBySid(ctx context.Context, in *appeal.AppealListRequset) (*appeal.AppealListReply, error) {
	l := logic.NewGetAppealListBySidLogic(ctx, s.svcCtx)
	return l.GetAppealListBySid(in)
}

func (s *AppealServer) ComplainToSupervisor(ctx context.Context, in *appeal.ComplainRequest) (*appeal.ComplainResponse, error) {
	l := logic.NewComplainToSupervisorLogic(ctx, s.svcCtx)
	return l.ComplainToSupervisor(in)
}

func (s *AppealServer) GetComplainTables(ctx context.Context, in *appeal.ComplainGetRequest) (*appeal.ComplainResponse, error) {
	l := logic.NewGetComplainTablesLogic(ctx, s.svcCtx)
	return l.GetComplainTables(in)
}

func (s *AppealServer) PassComplainTables(ctx context.Context, in *appeal.ComplainPassRequest) (*appeal.AppealResponse, error) {
	l := logic.NewPassComplainTablesLogic(ctx, s.svcCtx)
	return l.PassComplainTables(in)
}
