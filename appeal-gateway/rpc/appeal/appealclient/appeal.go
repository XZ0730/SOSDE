// Code generated by goctl. DO NOT EDIT.
// Source: appealservice.proto

package appealclient

import (
	"context"

	"appeal-gateway/rpc/appeal/appeal"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AppealListReply   = appeal.AppealListReply
	AppealListRequset = appeal.AppealListRequset
	AppealModel       = appeal.AppealModel
	AppealRequest     = appeal.AppealRequest
	AppealResponse    = appeal.AppealResponse

	Appeal interface {
		StudentAskforLeave(ctx context.Context, in *AppealRequest, opts ...grpc.CallOption) (*AppealResponse, error)
		GetAppealListBySid(ctx context.Context, in *AppealListRequset, opts ...grpc.CallOption) (*AppealListReply, error)
	}

	defaultAppeal struct {
		cli zrpc.Client
	}
)

func NewAppeal(cli zrpc.Client) Appeal {
	return &defaultAppeal{
		cli: cli,
	}
}

func (m *defaultAppeal) StudentAskforLeave(ctx context.Context, in *AppealRequest, opts ...grpc.CallOption) (*AppealResponse, error) {
	client := appeal.NewAppealClient(m.cli.Conn())
	return client.StudentAskforLeave(ctx, in, opts...)
}

func (m *defaultAppeal) GetAppealListBySid(ctx context.Context, in *AppealListRequset, opts ...grpc.CallOption) (*AppealListReply, error) {
	client := appeal.NewAppealClient(m.cli.Conn())
	return client.GetAppealListBySid(ctx, in, opts...)
}
