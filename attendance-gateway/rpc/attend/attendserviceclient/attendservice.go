// Code generated by goctl. DO NOT EDIT.
// Source: attendservice.proto

package attendserviceclient

import (
	"context"

	"attendance-gateway/rpc/attend/attendservice"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AttResponse    = attendservice.AttResponse
	PullAttRequest = attendservice.PullAttRequest

	Attendservice interface {
		PullAttendance(ctx context.Context, in *PullAttRequest, opts ...grpc.CallOption) (*AttResponse, error)
	}

	defaultAttendservice struct {
		cli zrpc.Client
	}
)

func NewAttendservice(cli zrpc.Client) Attendservice {
	return &defaultAttendservice{
		cli: cli,
	}
}

func (m *defaultAttendservice) PullAttendance(ctx context.Context, in *PullAttRequest, opts ...grpc.CallOption) (*AttResponse, error) {
	client := attendservice.NewAttendserviceClient(m.cli.Conn())
	return client.PullAttendance(ctx, in, opts...)
}
