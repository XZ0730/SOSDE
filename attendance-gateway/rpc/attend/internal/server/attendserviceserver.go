// Code generated by goctl. DO NOT EDIT.
// Source: attendservice.proto

package server

import (
	"context"

	"attend/attendservice"
	"attend/internal/logic"
	"attend/internal/svc"
)

type AttendserviceServer struct {
	svcCtx *svc.ServiceContext
	attendservice.UnimplementedAttendserviceServer
}

func NewAttendserviceServer(svcCtx *svc.ServiceContext) *AttendserviceServer {
	return &AttendserviceServer{
		svcCtx: svcCtx,
	}
}

func (s *AttendserviceServer) PullAttendance(ctx context.Context, in *attendservice.PullAttRequest) (*attendservice.AttResponse, error) {
	l := logic.NewPullAttendanceLogic(ctx, s.svcCtx)
	return l.PullAttendance(in)
}

func (s *AttendserviceServer) NormalAttend(ctx context.Context, in *attendservice.NormalReqest) (*attendservice.AttNorResponse, error) {
	l := logic.NewNormalAttendLogic(ctx, s.svcCtx)
	return l.NormalAttend(in)
}

// 传入stuid courseid university
func (s *AttendserviceServer) AttMember(ctx context.Context, in *attendservice.NormalReqest) (*attendservice.AttResponse, error) {
	l := logic.NewAttMemberLogic(ctx, s.svcCtx)
	return l.AttMember(in)
}

func (s *AttendserviceServer) LocationAttend(ctx context.Context, in *attendservice.LocationAttRequest) (*attendservice.AttResponse, error) {
	l := logic.NewLocationAttendLogic(ctx, s.svcCtx)
	return l.LocationAttend(in)
}

func (s *AttendserviceServer) GetAttendListByCourse(ctx context.Context, in *attendservice.GetAttListByCourseReq) (*attendservice.AttNorResponse, error) {
	l := logic.NewGetAttendListByCourseLogic(ctx, s.svcCtx)
	return l.GetAttendListByCourse(in)
}
